@page "/mirrorUser"
@inject BackendService backendService

<h1>Spegla användare</h1>
<EditForm Model="@userModel"  OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <label for="userinput">Användare</label>

    <InputText id="userinput" @bind-Value="userModel.UserName" />
    <button type="submit">Skicka</button>
</EditForm>


<div style="margin-top:1em">
    @if (message != null && success)
    {
        <div class="alert alert-success" role="alert">
            @message
        </div>
    }
</div>


@if (message != null && !success)
{
<div class="alert alert-warning" role="alert">
        @message
</div>
}


@code {
    private UserModel userModel = new UserModel();

    private string message;
    private bool success;

    private async void HandleValidSubmit()
    {
        message = "Skickar...";
        success = true;
        StateHasChanged();

        try
        {
            message=await backendService.CallMirrorUser(userModel.UserName);
            success=true;
        }catch(Exception e){
            message=e.Message;
            success=false;
        }
        StateHasChanged();
    }
}
